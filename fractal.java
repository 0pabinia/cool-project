/* autogenerated by Processing revision 1292 on 2023-05-31 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class sketch_230526a extends PApplet {

public void setup(){
  /* size commented out by preprocessor */;
}

public void draw(){
  background(0);
  new Branch(width/2,height/2,map(mouseX,0,width,0,PI),180,0,8,"up");
  new Branch(width/2,height/2,map(mouseX,0,width,0,PI),180,0,8,"down");

}

public void mouseClicked(){
//  saveFrame();
}
class Branch{
  float x, y, i, l;
  int tier, max;
  String dir;
  Branch(float x, float y, float i, float l, int tier, int max, String dir){
    this.x = x;
    this.y = y;
    this.i = i;
    this.l = l;
    this.tier = tier;
    this.max = max;
    this.dir = dir;
    show();
  }
  
  public void show(){
    pushMatrix();
    translate(x,y);
    stroke(0,249,255);
    strokeWeight(map(tier,0,max,10,1));
    if(dir == "up")
      line(0,0,0,-l);
    if(dir == "down")
      line(0,0,-0,l);
    if(tier<max){
      if(dir == "up")
        translate(0,-l);
      if(dir == "down")
        translate(-0,l);
      rotate(i);
      new Branch(0.0f,0.0f,i,(l*2/3),tier+1,max,dir);
      rotate(-2*i);
      new Branch(0.0f,0.0f,i,(l*2/3),tier+1,max,dir);
    }
    popMatrix();
  }
}


  public void settings() { size(800, 1000); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "sketch_230526a" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}